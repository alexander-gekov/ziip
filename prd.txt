Product Requirements Document (PRD)
Project Name: Zip (working title) ‚Äì grid-based path-drawing puzzle
Version: 1.0 draft
Owner: RecTech Games
Last updated: 18 June 2025

1 Why are we building this?
Hook: Simple rules (‚Äúconnect dots in order, fill every cell‚Äù) + quick, sharable puzzles = high LinkedIn virality.

Business goal: Grow mailing-list sign-ups and demo our HTML5 puzzle engine.

Success metrics:

Day-1 retention ‚â• 40 %

Avg. solve time ‚â§ 90 s on L1‚ÄìL10

‚â§ 0.5 % unsolvable puzzle reports

2 Target users
Casual puzzle players (desktop + mobile web).

Age 25-45, LinkedIn-active, ~50 % solve while multitasking at work.

3 Gameplay pillars
Draw a single orthogonal path that touches every grid cell exactly once.

Visit numbered dots strictly in ascending order.

No diagonal moves.

One continuous stroke‚Äîno lifting finger/mouse (but see Undo/Clear below).

4 Feature list & requirements
#	Feature	Must / Should / Could	Notes / Acceptance criteria
4.1	Path generation	Must	Generates guaranteed-solvable 6√ó6 to 12√ó12 puzzles. See ¬ß7.
4.2	Solver & validator	Must	O(n¬≤) validation on every move; fires success events.
4.3	Hint system	Must	Context-aware: next legal direction ‚ñ∫ next dot ‚ñ∫ full path reveal.
4.4	Drawing UX	Must	Smooth spline rendering, snap to grid on release, ‚â• 60 FPS on iPhone 8.
4.5	Undo last segment	Should	Ctrl-Z / two-finger tap. Multiple levels.
4.6	Clear board	Must	Resets timer and hints used counter.
4.7	Timer	Must	mm:ss at top; pauses on tab blur.
4.8	Confetti + path scale/skew on completion	Must	300 ms ease-out, confetti lasting 1 s.
4.9	Dynamic color theme	Must	Pull from predefined palette; contrast ratio ‚â• 4.5.
4.10	Next-puzzle flow	Must	Auto-advance after 1.5 s or tap.
4.11	Level selector	Should	Grid view with completion ticks + best times.
4.12	Share link	Could	Copies current puzzle seed + time to clipboard.

5 User stories & acceptance tests
Story	Acceptance
As a player, I want to drag from dot 1 to dot 2 and see the line follow my finger.	Latency < 50 ms; path snaps exactly when crossing grid boundary.
As a stuck player, I tap ‚ÄúHint‚Äù and expect the next segment to flash.	Segment flashes three times, then becomes permanent if tapped again.
As a speed-runner, I hit ‚ÄúR‚Äù and expect the board + timer to reset instantly.	< 100 ms reset, focus returns to grid.

(Complete list maintained in Jira.)

6 Non-functional
Performance: 60 FPS on Chrome v90+, Safari iOS 15+.

Accessibility:

Color-blind safe palette option.

Keyboard mode (arrow keys).

ARIA and screen-reader labels for dots & buttons.

Analytics: path length, hint count, solve time ‚Üí Segment.

Security & privacy: LocalStorage for progress; no PII logged.

Localization ready: strings externalized, LTR/RTL neutral.

7 Algorithm spec
Generation

Start with Hamiltonian path on N√óN lattice (e.g. recursive backtracker).

Insert numbered nodes at k evenly spaced positions.

Verify unique solution by depth-first backtracking solver; regenerate if > 1 solution.

Solver (for validation & hints)

Incremental DFS from last confirmed cell, pruning at visited set.

On hint request, search subtree limited to depth d = remainingCells / 3 for speed.

Complexity

Generation worst-case O(n¬≤); validation O(1) per new cell (hash-set lookup).

8 Technical architecture
Layer	Tech
Rendering	HTML5 Canvas w/ off-screen buffer; fallback SVG.
State	React 18 + Zustand store.
Algorithms	TypeScript modules, pure functions, unit-tested (Jest).
Animations	CSS transform + Canvas redraw; GSAP for confetti.
Build	Vite; target bundle < 120 kB gzipped.

9 UI details
Grid: 48 px cells default; scales to fit viewport; light 1 px white gridlines.

Dots: Filled circles, 16 px radius, black background, white numerals.

Path stroke: 12 px wide; rounded caps; shadow blur for depth.

Buttons:

Undo ‚Ü©Ô∏é, Clear ‚úï, Hint üí°, Share üîó.

Hover & pressed states; disabled styling (40 % opacity).

10 Audio (optional MVP+1)
Soft ‚Äúswish‚Äù on segment draw, ‚Äúding‚Äù on dot visit, confetti burst sound.

Mute toggle in header; persisted.

11 Analytics events
Event	Properties
puzzle_start	size, seed
puzzle_complete	time_ms, hints_used
hint_used	step, remaining_cells

12 Open questions
Level-pack strategy: daily free puzzle vs. finite campaign?

Monetization: ad banner after every 3 solves?

Social meta-image design for share links.

Custom puzzle editor for UGC?

13 Timeline (high-level)
Week	Milestone
1	Grid rendering + basic draw
2	Generation + solver integrated
3	Hint tiers + undo/clear
4	UI polish, color themes, animations
5	Analytics, accessibility pass
6	QA + LinkedIn share launch

14 Approval
Product: ___________

Engineering: ___________

Design: ___________

